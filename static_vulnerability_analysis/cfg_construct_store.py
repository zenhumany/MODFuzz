
import angr
import pickle
import r2pipe
from important_global_data import *

kernel = angr.Project(kernal_binary, use_sim_procedures=False,
                      auto_load_libs=False)
# cfg = kernel.analyses.CFGFast()
cfg1 = kernel.analyses.CFGFast(force_complete_scan=True,
                               force_smart_scan=False,
                               cross_references=True,
                               data_references=True,
                               show_progressbar=True)


edges = list(cfg1.graph.edges())
for u, v in edges:
    if u.has_return:
        cfg1.graph.remove_edge(u, v)
        print('remove error edge between', u.name, v.name)


with open("cfg_complete_scan_" + kernal_binary.split('\\')[-1] + '.pkl', 'wb') as file:
    pickle.dump(cfg1, file)


r2 = r2pipe.open(kernal_binary)
r2.cmd('aaa')
r2_functions = r2.cmdj('aflj')
bin_symbol_table = r2.cmdj('isj')
with open("r2_functions_result_" + kernal_binary.split('\\')[-1] + '.pkl', 'wb') as file:
    pickle.dump(r2_functions, file)
with open("r2_bin_symbol_table_" + kernal_binary.split('\\')[-1] + '.pkl', 'wb') as file:
    pickle.dump(bin_symbol_table, file)
print('Done!')
